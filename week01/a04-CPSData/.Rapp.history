sd(c(5,8,12))
which.min(c(4,1,6))
sq.root=2
ls()
sq.root
sq_root=4
sq_root
ls()
sq root=2
demo
demo()
colors()
sd(c(5,8,12))
which.min(c(4,1,6))
c(4,1,6)
min(c(4,1,6))
which?
?which
exit
quit
quit()
Table number of pieces of personal information on the internet#
sort(table(poll $Info.On.Internet))
poll = read.csv("AnonymityPoll.csv")
poll = read.csv("AnonymityPoll.csv")
limited = subset(poll,Internet.Use==1 | Smartphone==1)
Table number of pieces of personal information on the internet#
sort(table(poll $Info.On.Internet))
summary(limited)
sort(table(poll $Info.On.Internet))
sort(table(limited $Info.On.Internet))
table(poll$Worry.About.Info)
table(limited$Worry.About.Info)
table(poll$Anonymity.Possible)
table(limited$Anonymity.Possible)
table(poll$Tried.Masking.Identity)
table(limited$Tried.Masking.Identity)
table(poll$Privacy.Laws.Effective)
table(limited$Privacy.Laws.Effective)
table(limited$Tried.Masking.Identity)
table(limited$Tried.Masking.Identity)
table(limited$Tried.Masking.Identity)
table(poll$Tried.Masking.Identity)
hist(limited$Age)
plot(limited$Age, limited$Info.On.Internet)
plot(limited$Age, limited$Info.On.Internet)#
table(limited$Age, limited$Info.On.Internet)
jitter(c(1, 2, 3))
?jitter
jitter(c(1, 2, 3))
jitter(c(1, 2, 3))
jitter(c(1, 2, 3))
jitter(c(1, 2, 3))
jitter(c(2, 12, 3))
?jitter
plot(jitter(limited$Age), jitter(limited$Info.On.Internet))
plot(limited$Age, jitter(limited$Info.On.Internet))
plot(limited$Age, jitter(limited$Info.On.Internet))
plot(limited$Age, jitter(limited$Info.On.Internet))
plot(limited$Age, jitter(limited$Info.On.Internet))
plot(limited$Age, jitter(limited$Info.On.Internet))
plot(limited$Age, jitter(limited$Info.On.Internet))
plot(limited$Age, jitter(limited$Info.On.Internet))
plot(limited$Age, jitter(limited$Info.On.Internet))
plot(limited$Age, jitter(limited$Info.On.Internet))
plot(limited$Age, jitter(limited$Info.On.Internet))
plot(limited$Age, jitter(limited$Info.On.Internet))
plot(limited$Age, jitter(limited$Info.On.Internet))
plot(limited$Age, jitter(limited$Info.On.Internet))
plot(limited$Age, jitter(limited$Info.On.Internet))
plot(limited$Age, jitter(limited$Info.On.Internet))
plot(limited$Age, jitter(limited$Info.On.Internet))
plot(limited$Age, jitter(limited$Info.On.Internet))
plot(limited$Age, jitter(limited$Info.On.Internet))
plot(limited$Age, jitter(limited$Info.On.Internet))
plot(limited$Age, jitter(limited$Info.On.Internet))
plot(limited$Age, jitter(limited$Info.On.Internet))
plot(limited$Age, jitter(limited$Info.On.Internet))
plot(limited$Age, jitter(limited$Info.On.Internet))
plot(limited$Age, jitter(limited$Info.On.Internet))
plot(limited$Age, jitter(limited$Info.On.Internet))
plot(limited$Age, jitter(limited$Info.On.Internet))
plot(limited$Age, jitter(limited$Info.On.Internet))
?jitter
plot(limited$Age, jitter(limited$Info.On.Internet,0.1))
plot(jitter(limited$Age,0.1), jitter(limited$Info.On.Internet,0.1))
plot(jitter(limited$Age,0.9), jitter(limited$Info.On.Internet,0.9))
plot(jitter(limited$Age,0.4), jitter(limited$Info.On.Internet,0.4))
?plot
plot(jitter(limited$Age,0.4), jitter(limited$Info.On.Internet,0.4),type="p"
plot(jitter(limited$Age,0.4), jitter(limited$Info.On.Internet,0.4),type="o")
plot(jitter(limited$Age,0.4), jitter(limited$Info.On.Internet,0.4),type="o")
plot(jitter(limited$Age,0.4), jitter(limited$Info.On.Internet,0.4),type="l")
plot(jitter(limited$Age,0.4), jitter(limited$Info.On.Internet,0.4),type="h")
plot(jitter(limited$Age,0.4), jitter(limited$Info.On.Internet,0.4),type="s")
plot(jitter(limited$Age,0.4), jitter(limited$Info.On.Internet,0.4),type="p")
tapply(limited$Info.On.Internet,limited$Smartphone,summary)
tapply(limited$Tried.Masking.Identity,limited$Smartphone,summary)
table(limited$Tried.Masking.Identity,limited$Smartphone)
93/(390+93)
33/(248+ 33)
CPS = read.csv("CPSData.csv")
summary(CSV)#
str(CSV)
summary(CPS)#
str(CPS)
sort(table(CPS$State))
table(CPS$Citizenship)
116639+7073
(116639+7073) / (116639+7073+ 7590)
table(CPS$Race,CPS$Hispanic)
table(CPS$Region, is.na(CPS$Married))
6075/(6075+ 24609)
4507/(4507+ 21432)
7967/(7967+ 33535)
6789+(6789+ 26388)
6789/(6789+ 26388)
table(CPS$Sex, is.na(CPS$Married))
table(CPS$Age, is.na(CPS$Married))
table(CPS$Citizenship, is.na(CPS$Married))
table(CPS$State,is.na(MetroAreaCode))
table(CPS$State,is.na(CPS$MetroAreaCode))
table(CPS$Region,is.na(CPS$MetroAreaCode))
10674/(10674+20010)
5609/(5609+ 20330)
9871/(9871+ 31631)
8084/(8084+ 25093)
tapply(is.na(CPS$MetroAreaCode),CPS$State,mean)
MetroAreaMap = read.csv("MetroAreaCodes.csv")
str(MetroAreaMap)
CountryMap = read.csv("CountryCodes.csv")
str(CountryMap)
CPS = merge(CPS, MetroAreaMap, by.x="MetroAreaCode", by.y="Code", all.x=TRUE)
summary(CPS)#
str(CPS)
sort(table(CPS$MetroArea))
sort(tapply(CPS$Hispanic,CPS$MetroArea,mean))
sort(tapply(CPS$Race == "Asian",CPS$MetroArea,mean))
sort(tapply(CPS$Education == "No high school diploma", CPS$MetroArea, mean,na.rm=TRUE))
CPS = merge(CPS, CountryMap, by.x="CountryOfBirthCode", by.y="Code", all.x=TRUE)
summary(CPS)#
str(CPS)
tapply(CPS$MetruArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country <> "United States",mean,na.rm=TRUE)
tapply(CPS$MetruArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country != "United States",mean,na.rm=TRUE)
tapply(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country != "United States",mean,na.rm=TRUE)
tapply(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country != "United States",sum,na.rm=TRUE)
tapply(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country != "United States",mean,na.rm=TRUE)
table(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country != "United States",na.rm=TRUE)
table(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country != "United States")
1668/(1668+ 3736)
tapply( CPS$Country != "United States",CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA",mean,na.rm=TRUE)
sort(table(CPS$MetroArea,CPS$Country=="India"))
sort(table(CPS$Country=="India",CPS$MetroArea))
sort(table(CPS$Country,CPS$MetroArea))
summary(CPS$Country)
table(CPS$Country,CPS$MetroArea)
table(CPS$Country=="India",CPS$MetroArea)
sort(table(CPS$Country=="India",CPS$MetroArea))
sort(table(CPS$Country=="India",CPS$MetroArea))
table(CPS$Country=="India",CPS$MetroArea)
tapply(CPS$Country=="India",CPS$MetroArea,sum,rm.na=TRUE)
sort(tapply(CPS$Country=="India",CPS$MetroArea,sum,rm.na=TRUE))
sort(tapply(CPS$Country=="India",CPS$MetroArea,sum,rm.na=TRUE))
sort(tapply(CPS$MetroArea,CPS$Country=="India",sum,rm.na=TRUE))
tapply(CPS$Country=="India",CPS$MetroArea,sum,rm.na=TRUE)
sort(tapply(CPS$Country=="India",CPS$MetroArea,sum,rm.na=TRUE))
sort(tapply(CPS$Country=="India",CPS$MetroArea,summary,rm.na=TRUE))
tapply(CPS$Country=="India",CPS$MetroArea,summary,rm.na=TRUE)
table(CPS$Country=="India",#
CPS$MetroArea == "Boston-Cambridge-Quincy, MA-NH"#
)
tapply(CPS$Country=="India",CPS$MetroArea,summary,rm.na=TRUE)
tapply(CPS$MetroArea,CPS$Country=="India",summary,rm.na=TRUE)
Quantity of brazilian people by MetroArea#
tapply(CPS$MetroArea,CPS$Country=="Brazil",summary,rm.na=TRUE)
Quantity of somalian people by MetroArea#
tapply(CPS$MetroArea,CPS$Country=="Somalia",summary,rm.na=TRUE)
str(CPS)
sum(Industry)
sum(CPS$Industry)
str(CPS$Industry)
sum(CPS$Industry,rm.na=TRUE)
summary(CPS$Industry)
sort(table(CPS$Industry))
table(CPS$Country!="Canada" & CPS$Country!="United States" , CPS$Country )
sort(table(CPS$Country!="Canada" & CPS$Country!="United States" , CPS$Country ))
sort(table(CPS$Country!="Canada" & CPS$Country!="United States" , CPS$Country ))
table(CPS$Country!="Canada" & CPS$Country!="United States" , CPS$Country )
table( CPS$Country,CPS$Country!="Canada" & CPS$Country!="United States"  )
sort(table( CPS$Country ))
