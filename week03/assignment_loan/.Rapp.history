sd(c(5,8,12))
which.min(c(4,1,6))
sq.root=2
ls()
sq.root
sq_root=4
sq_root
ls()
sq root=2
demo
demo()
colors()
sd(c(5,8,12))
which.min(c(4,1,6))
c(4,1,6)
min(c(4,1,6))
which?
?which
exit
quit
quit()
install.package("mice")
install.packages("mice")
imputed_check = read.csv("loans_imputed.csv")
loans = read.csv("loans.csv")
str(loans)#
  summary(loans)
imputed_check = read.csv("loans_imputed.csv")
library(mice)#
  set.seed(144)#
  vars.for.imputation = setdiff(names(loans), "not.fully.paid")#
  imputed = complete(mice(loans[vars.for.imputation]))#
  loans[vars.for.imputation] = imputed
summary(imputed)
summary(imputed_check)
set.seed(144)
split = sample.split(imputed$not.fully.paid, SplitRatio = 0.7)
library(caTools)#
  set.seed(144)#
  split = sample.split(imputed$not.fully.paid, SplitRatio = 0.7)
split = sample.split(imputed$not.fully.paid, SplitRatio = 0.7)
imputed$not.fully.paid
loans = read.csv("loans.csv")
str(loans)
summary(loans)
table(loans$not.fully.paid)
1533/(1533+ 8045)
imputed_check = read.csv("loans_imputed.csv")
library(mice)
set.seed(144)
vars.for.imputation = setdiff(names(loans), "not.fully.paid")
imputed = complete(mice(loans[vars.for.imputation]))
loans[vars.for.imputation] = imputed
summary(imputed)
library(caTools)
set.seed(144)
split = sample.split(imputed$not.fully.paid, SplitRatio = 0.7)
split = sample.split(loans$not.fully.paid, SplitRatio = 0.7)
str(loans)
str(loans)
summary(loans)
set.seed(144)
split = sample.split(loans$not.fully.paid, SplitRatio = 0.7)
train = subset(loans, split==TRUE)
test = subset(loans, split==FALSE)
loansModel = glm(not.fully.paid ~ . , data= train, family=binomial)
summary(loansModel)
exp(-9.288e-03*700)/exp(-9.288e-03*710)
(-9.288e-03*710) - (-9.288e-03*700)
(-9.288e-03*700)-(-9.288e-03*710)
predictTest = predict(loansModel, type="response", newdata=test)
table(test$not.fully.paid, predictTest > 0.5)
acc = (2400+3) / (2400+13+3+457)
acc
table(test$not.fully.paid, predicted.risk > 0.5)
predicted.risk = predict(loansModel, type="response", newdata=test)
table(test$not.fully.paid, predicted.risk > 0.5)
acc = (2400+3) / (2400+13+3+457)
acc
table(loans$not.fully.paid==0)
table(loans$not.fully.paid==1)
8045/(8045+ 1533)
library(ROCR)
ROCRpred = prediction(predicted.risk, test$not.fully.paid)
as.numeric(performance(ROCRpred, "auc")@y.values)
loansModelBi = glm(not.fully.paid ~ int.rate , data= train, family=binomial)
summary(loansModel)
summary(loansModelBi)
predicted.risk.bi = predict(loansModelBi, type="response", newdata=test)
sort(table(predicted.risk.bi))
sort(table(!predicted.risk.bi))
table(test$not.fully.paid, predicted.risk.bi > 0.5)
sort(table(predicted.risk.bi))
sort(table(predicted.risk.bi$not.fully.paid))
sort(predicted.risk.bi)
ROCRpredBI = prediction(predicted.risk.bi, test$not.fully.paid)
as.numeric(performance(ROCRpredBI, "auc")@y.values)
10*exp(0.06*3)
test$profit = exp(test$int.rate*3) - 1
test$profit[test$not.fully.paid == 1] = -1
sort(test$profit)
highInterest = subset(test,int.rate>=0.15)
mean(highInterest$profit)
table(highInterest$not.fully.paid)
110/(110+327)
cutoff = sort(highInterest$predicted.risk, decreasing=FALSE)[100]
str(highInterest)
str(test)
str(test$predicted.risk)
test$predicted.risk
cutoff = sort(highInterest$predicted.risk, decreasing=FALSE)[100]
highInterest$predicted.risk
predicted.risk
str(predicted.risk)
nrow(predicted.risk)
nrows(predicted.risk)
test$predicted.risk = predicted.risk
cutoff = sort(highInterest$predicted.risk, decreasing=FALSE)[100]
highInterest = subset(test,int.rate>=0.15)
mean(highInterest$profit)
table(highInterest$not.fully.paid)
110/(110+327)
cutoff = sort(highInterest$predicted.risk, decreasing=FALSE)[100]
test$profit = exp(test$int.rate*3) - 1
test$profit[test$not.fully.paid == 1] = -1
highInterest = subset(test,int.rate>=0.15)
mean(highInterest$profit)
table(highInterest$not.fully.paid)
cutoff = sort(highInterest$predicted.risk, decreasing=FALSE)[100]
selectedLoans = subset(highInterest$predicted.risk <=cutoff )
selectedLoans = subset(highInterest,predicted.risk <=cutoff )
str(selectedLoans)
sum(selectedLoans$profit)
table(selectedLoans$not.fully.paid)
sum(selectedLoans$profit)
selectedLoans$profit
